//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.03.10 at 03:28:52 PM EDT 
//


package com.pml.services.security;

import java.util.Collection;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;extension base="{security.services.pml.com}userBase">
 *       &lt;attribute name="action" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
@XmlRootElement(name = "delegate", namespace = "security.services.pml.com")
public class Delegate
    extends UserBase
{

    @XmlAttribute(name = "action")
    protected String action;

    /**
     * Gets the value of the action property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAction() {
        return action;
    }

    /**
     * Sets the value of the action property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAction(String value) {
        this.action = value;
    }

    public Delegate withAction(String value) {
        setAction(value);
        return this;
    }

    @Override
    public Delegate withApps(UserBase.App... values) {
        if (values!= null) {
            for (UserBase.App value: values) {
                getApps().add(value);
            }
        }
        return this;
    }

    @Override
    public Delegate withApps(Collection<UserBase.App> values) {
        if (values!= null) {
            getApps().addAll(values);
        }
        return this;
    }

    @Override
    public Delegate withActive(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public Delegate withPrimary(Boolean value) {
        setPrimary(value);
        return this;
    }

    @Override
    public Delegate withLocked(Boolean value) {
        setLocked(value);
        return this;
    }

    @Override
    public Delegate withUserId(String value) {
        setUserId(value);
        return this;
    }

}
